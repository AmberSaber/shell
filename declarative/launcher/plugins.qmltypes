import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable org.hawaii.launcher 0.1'

Module {
    Component {
        name: "AppsModel"
        prototype: "QAbstractListModel"
        exports: ["org.hawaii.launcher/AppsModel 0.1"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Roles"
            values: {
                "NameRole": 257,
                "CommentRole": 258,
                "IconNameRole": 259,
                "FilterInfoRole": 260
            }
        }
        Enum {
            name: "NameFormat"
            values: {
                "NameOnly": 0,
                "GenericNameOnly": 1,
                "NameAndGenericName": 2,
                "GenericNameAndName": 3
            }
        }
        Property { name: "appNameFormat"; type: "NameFormat" }
        Property { name: "categoryFilter"; type: "string" }
        Signal { name: "refreshing" }
        Signal { name: "refreshed" }
        Signal {
            name: "appLaunched"
            Parameter { name: "desktopFile"; type: "string" }
        }
        Method {
            name: "trigger"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
        }
    }
    Component {
        name: "AppsProxyModel"
        prototype: "QSortFilterProxyModel"
        exports: ["org.hawaii.launcher/AppsProxyModel 0.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "query"; type: "string" }
        Signal { name: "appLaunched" }
        Method {
            name: "sourceIndex"
            type: "QModelIndex"
            Parameter { name: "proxyIndex"; type: "QModelIndex" }
        }
        Method {
            name: "trigger"
            type: "bool"
            Parameter { name: "proxyIndex"; type: "QModelIndex" }
        }
    }
    Component {
        name: "CategoriesModel"
        prototype: "QAbstractListModel"
        exports: ["org.hawaii.launcher/CategoriesModel 0.1"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Roles"
            values: {
                "NameRole": 257,
                "CommentRole": 258,
                "IconNameRole": 259,
                "CategoryRole": 260
            }
        }
        Property { name: "includeAllCategory"; type: "bool" }
        Signal { name: "refreshing" }
    }
    Component {
        name: "LauncherItem"
        prototype: "QObject"
        exports: ["org.hawaii.launcher/LauncherItem 0.1"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "appId"; type: "string"; isReadonly: true }
        Property { name: "name"; type: "string"; isReadonly: true }
        Property { name: "comment"; type: "string"; isReadonly: true }
        Property { name: "iconName"; type: "string"; isReadonly: true }
        Property { name: "pinned"; type: "bool"; isReadonly: true }
        Property { name: "running"; type: "bool"; isReadonly: true }
        Property { name: "active"; type: "bool" }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "progress"; type: "int"; isReadonly: true }
        Signal { name: "launched" }
        Method { name: "launch"; type: "bool" }
        Method { name: "quit"; type: "bool" }
    }
    Component {
        name: "LauncherModel"
        prototype: "QAbstractListModel"
        exports: ["org.hawaii.launcher/LauncherModel 0.1"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Roles"
            values: {
                "AppIdRole": 257,
                "NameRole": 258,
                "CommentRole": 259,
                "IconNameRole": 260,
                "PinnedRole": 261,
                "RunningRole": 262,
                "ActiveRole": 263,
                "HasWindowsRole": 264,
                "HasCountRole": 265,
                "CountRole": 266,
                "HasProgressRole": 267,
                "ProgressRole": 268,
                "HasActionsRole": 269
            }
        }
        Method {
            name: "get"
            type: "LauncherItem*"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "indexFromAppId"
            type: "int"
            Parameter { name: "appId"; type: "string" }
        }
        Method {
            name: "pin"
            Parameter { name: "appId"; type: "string" }
        }
        Method {
            name: "unpin"
            Parameter { name: "appId"; type: "string" }
        }
    }
    Component {
        name: "ProcessRunner"
        prototype: "QObject"
        exports: ["org.hawaii.launcher/ProcessRunner 0.1"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "launchApplication"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
    }
    Component {
        name: "QAbstractProxyModel"
        prototype: "QAbstractItemModel"
        Property { name: "sourceModel"; type: "QAbstractItemModel"; isPointer: true }
    }
    Component {
        name: "QSortFilterProxyModel"
        prototype: "QAbstractProxyModel"
        Property { name: "filterRegExp"; type: "QRegExp" }
        Property { name: "filterKeyColumn"; type: "int" }
        Property { name: "dynamicSortFilter"; type: "bool" }
        Property { name: "filterCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "sortCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "isSortLocaleAware"; type: "bool" }
        Property { name: "sortRole"; type: "int" }
        Property { name: "filterRole"; type: "int" }
        Method {
            name: "setFilterRegExp"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterWildcard"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterFixedString"
            Parameter { name: "pattern"; type: "string" }
        }
        Method { name: "clear" }
        Method { name: "invalidate" }
    }
}
